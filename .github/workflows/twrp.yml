name: TWRP

on:
  #  release:
  #    types: [published]
  #  push:
  #    branches:
  #      - master
  #    paths:
  #      - '.config'
  #  schedule:
  #    - cron: 0 8 * * 5
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # watch:
  #   types: [started]

env:
  Rec_name: twrp
  Rec_ver: 3.5.2-0
  Rec_url: https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git -b twrp-11
  device: mojito
  DT_url: https://github.com/boedhack99/rec_mojito -b 11
  DT_path: device/xiaomi/mojito
 # KT_url: https://github.com/MumetNgoding/Kernel_Xiaomi_Mojito -b silont
 # KT_path: kernel/xiaomi/mojito
 # PT_url: https://github.com/Octavi-OS/platform_system_tools_mkbootimg -b 11
 # PT_path: system/core/mkbootimg
  BT_url: https://github.com/LineageOS/android_hardware_qcom_bootctrl -b lineage-18.1-caf
  BT_path: hardware/qcom-caf/bootctrl
 # CT_url: https://github.com/LineageOS/android_build -b lineage-18.1
 # CT_path: build/make
  target: bootimage
  WorkSpace: WorkSpace
  TZ: Asia/Jakarta
  Enable_cache: false
  Enable_ccache: true
  Delete_old: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Delete old environment
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/sudo apt/sources.list.d
          sudo apt -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo apt update
          sudo apt -y autoremove --purge
          sudo apt clean
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*

      - name: Initializing environment
        run: |
          git config --global user.name "boedhack99"
          git config --global user.email "boedhack@gmail.com"
          git clone https://gitlab.com/OrangeFox/misc/scripts --depth=1 --single-branch
          cd scripts
          sudo -E bash setup/android_build_env.sh
          sudo -E bash setup/install_android_sdk.sh

      - name: Sync recovery source
        run: |
          mkdir WorkSpace
          cd WorkSpace
          repo init -u ${{env.Rec_url}} --depth=1 --groups=all,-notdefault,-device,-darwin,-x86,-mips
          repo sync -j4

      - name: Sync device tree
        run: |
          cd ${{env.WorkSpace}}
          git clone ${{ env.DT_url }} --depth=1 --single-branch ${{ env.DT_path }}

      - name: Patch bootctrl
        run: |
          cd ${{env.WorkSpace}}
          git clone ${{ env.BT_url }} --depth=1 --single-branch ${{ env.BT_path }}

#      - name: Patch build
#        run: |
#          cd ${{env.WorkSpace}}
#          git clone ${{ env.CT_url }} --depth=1 --single-branch ${{ env.CT_path }}

#      - name: Patch mkbootimg
#        run: |
#          cd ${{env.WorkSpace}}
#          rm -rf ${{ env.PT_path }}
#          git clone ${{ env.PT_url }} --depth=1 --single-branch ${{ env.PT_path }}

      - name: Show tree
        run: tree -C -d -L 6

      - name: Restore cache
        uses: actions/cache@v2
        if: env.Enable_cache == 'true' && !cancelled()
        with:
          path: |
            ~/.ccache
            ${{env.WorkSpace}}/out
          key: ${{ runner.os }}-${{env.Rec_name}}-${{env.Rec_ver}}-${{ env.device }} #${{ hashFiles('**/BoardConfig.mk') }}
          restore-keys: |
            ${{ runner.os }}-${{env.Rec_name}}-${{env.Rec_ver}}-${{ env.device }}

      - name: Setup ccache
        uses: alexjurkiewicz/setup-ccache@master
        if: env.Enable_ccache == 'true' && !cancelled()
        with:
          max-size: 5G
          extra-config: |
            keep_comments_cpp = true

      - name: Building ${{env.Rec_name}}
        run: |
          cd ${{env.WorkSpace}}
          . build/envsetup.sh
          export LC_ALL="C"
          export ALLOW_MISSING_DEPENDENCIES=true
          lunch aosp_${{ env.device }}-eng
          make ${{env.target}}
        shell: bash

      - name: Get info
        id: info
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y-%m-%d-%H-%M")"
          echo "::set-output name=OutFolder::"${{env.WorkSpace}}/out/target/product/${{ env.device }}""
        shell: bash

      - name: Show out tree
        run: |
          cd ${{steps.info.outputs.OutFolder}}
          sudo zip -r9 recovery.zip recovery.img
          tree -C -L 5

      - name: Upload firmware directory
        uses: actions/upload-artifact@main
        # if: steps.organize.outputs.status == 'success' && !cancelled()
        with:
          name: ${{env.Rec_name}}_for_${{ env.device }}-${{ github.run_id }}
          path: ${{steps.info.outputs.OutFolder}}/*.img

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{steps.info.outputs.OutFolder}}/*.zip
            ${{steps.info.outputs.OutFolder}}/*.img
          name: ${{env.Rec_name}}-${{ env.device }}-${{ github.run_id }}
          tag_name: ${{ env.device }}-${{env.Rec_name}}-${{ steps.info.outputs.date }}
          body: ${{env.Rec_name}}-${{env.Rec_ver}} for ${{ env.device }} build at ${{ steps.info.outputs.date }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.1.0
        if: env.Delete_old == 'true' && !cancelled()
        with:
          keep_latest: 12
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        if: env.Delete_old == 'true' && !cancelled()
        with:
          retain_days: 1
          keep_minimum_runs: 10
